---
import HeaderLink from "./HeaderLink.astro"
import { SITE_TITLE } from "../consts"
import { Image } from "astro:assets"
import { ModeToggle } from "./ModeToggle"
---

<header class="py-20">
  <nav class="container flex justify-between px-8">
    <a href="/">
      <Image
        id="logo"
        src="/logo.svg"
        alt="A bird sitting on a nest of eggs."
        width="40"
        height="40"
        loading="eager"
      />
    </a>
    <div class="main-nav-links flex gap-4 items-center">
      <HeaderLink href="/">Home</HeaderLink>
      <HeaderLink href="/about">About</HeaderLink>
      <HeaderLink href="/projects">Projects</HeaderLink>
      <!-- <HeaderLink href="/blog">Writing</HeaderLink> -->
      <ModeToggle client:load />
    </div>
  </nav>
</header>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const logo = document.getElementById("logo") as HTMLImageElement
    const htmlElement = document.documentElement
    const currentTheme = localStorage.getItem("theme") || "light"

    const setLogoBasedOnTheme = (theme: string) => {
      logo.src = theme === "dark" ? "/logo-white.svg" : "/logo.svg"
    }

    // Initial logo setup based on stored theme or system preference
    setLogoBasedOnTheme(currentTheme)

    // Listen for system theme changes (prefers-color-scheme)
    window
      .matchMedia("(prefers-color-scheme: dark)")
      .addEventListener("change", (e) => {
        setLogoBasedOnTheme(e.matches ? "dark" : "light")
      })

    // Function to check and update theme based on <html> class
    const updateLogoBasedOnHtmlClass = () => {
      const theme = htmlElement.classList.contains("dark") ? "dark" : "light"
      setLogoBasedOnTheme(theme)
    }

    // MutationObserver to watch for class changes on the <html> element
    const observer = new MutationObserver(() => {
      updateLogoBasedOnHtmlClass()
    })

    observer.observe(htmlElement, {
      attributes: true,
      attributeFilter: ["class"],
    })

    // Handle theme toggle click (if a toggle button exists)
    const modeToggle = document.querySelector(".mode-toggle")
    modeToggle?.addEventListener("click", updateLogoBasedOnHtmlClass)
  })
</script>
